basePath: /
definitions:
  core.AuthCredentials:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  core.User:
    properties:
      email:
        type: string
      passwordHash:
        type: string
      username:
        type: string
    type: object
  v1.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  v1.tokenResponse:
    properties:
      accessToken:
        type: string
    type: object
  v1.userResponse:
    properties:
      user:
        $ref: '#/definitions/core.User'
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for AnSpace Application
  title: AnSpace App API
  version: "1.0"
paths:
  /api/v1/auth/logout:
    get:
      description: accept refresh token from cookie, and return empty tokens
      operationId: logout
      parameters:
      - description: refresh token in cookies
        in: header
        name: Cookie
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: logout
      tags:
      - auth
  /api/v1/auth/me:
    get:
      description: return curent username
      operationId: me
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.userResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      security:
      - AccessToken: []
      summary: return curent username
      tags:
      - auth
  /api/v1/auth/refresh:
    post:
      description: accept refresh token from cookie, and return new access token
      operationId: refresh-access-token
      parameters:
      - description: refresh token in cookies
        in: header
        name: Cookie
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: refresh access token
      tags:
      - auth
  /api/v1/auth/signin:
    post:
      consumes:
      - application/json
      description: login to accont with username and password and return access token
        in JSON and refresh token in cookies
      operationId: login-to-account
      parameters:
      - description: signin input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/core.AuthCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: login to account
      tags:
      - auth
  /api/v1/auth/signup:
    post:
      consumes:
      - application/json
      description: create account in db and return access token in JSON and refresh
        token in cookies
      operationId: create-account
      parameters:
      - description: signUp input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/core.AuthCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: create account
      tags:
      - auth
  /api/v1/reset:
    post:
      description: generate and save password reset code into db. Sends code to email
      operationId: gen_pass_reset_code
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: generate password reset code
      tags:
      - auth
securityDefinitions:
  AccessToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
